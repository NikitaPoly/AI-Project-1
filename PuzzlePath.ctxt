#BlueJ class context
comment0.target=PuzzlePath
comment0.text=\r\n\ A\ path\ is\ a\ list\ of\ states,\ from\ start\ to\ finish.\r\n\ You'll\ also\ want\ to\ keep\ track\ of\ the\ cost\ of\ the\ path...\r\n\ @author\ Steven\ Bogaerts\r\n
comment1.params=startState\ initialH
comment1.target=PuzzlePath(PuzzleState,\ Heuristic)
comment1.text=\r\n\ Construct\ a\ new\ path,\ starting\ at\ the\ given\ state,\r\n\ that\ will\ use\ the\ given\ heuristic.\r\n
comment2.params=stateToAdd
comment2.target=void\ addState(PuzzleState)
comment2.text=\r\n\ Adds\ a\ state\ to\ the\ end\ of\ this\ path,\ and\ updates\ the\ cost\r\n\ of\ the\ path\ accordingly.\r\n
comment3.params=
comment3.target=void\ updateCost()
comment3.text=\r\n\ Update\ the\ total\ cost\ of\ this\ path\ (presumably\ because\ a\ new\ state\ has\ been\r\n\ added).\ The\ total\ cost\ is\ path\ cost\ plus\ heuristic\ cost.\r\n
comment4.params=
comment4.target=int\ getCost()
comment4.text=\r\n\ Returns\ the\ cost\ of\ this\ path\ (steps\ so\ far\ +\ estimated\ remaining).\r\n
comment5.params=
comment5.target=PuzzleState\ stateAtEndOfPath()
comment5.text=\r\n\ Returns\ the\ state\ at\ the\ end\ of\ this\ path.\r\n
comment6.params=
comment6.target=PuzzlePath\ makeCopy()
comment6.text=\r\n\ Makes\ a\ copy\ of\ this\ path.\r\n
comment7.params=
comment7.target=java.lang.String\ toString()
comment7.text=\r\n\ Returns\ a\ String\ representation\ of\ this\ path.\r\n
comment8.params=
comment8.target=int\ length()
comment8.text=\r\n\ Returns\ the\ length\ of\ this\ path.\r\n
numComments=9
